% Первая часть задания - предикаты работы со списками

% Реализация стандартных предикатов обработки списков

% Предикат длины списка
% Формат ввода: (список, длина)
myLength([], 0) .
myLength([_|T], N) :- myLength(T, N1), N is N1 + 1.

% Предикат принадлежности элемента списку
% Формат ввода: (элемент, список)
myMember(X, [X|_]).
myMember(X, [_|T]) :- myMember(X, T).

% Предикат конкатенации списков
% Формат ввода: (список1, список2, список1+2)
myAppend([], L, L).
myAppend([H|T], L, [H|R]) :- myAppend(T, L, R).

% Предикат удаления элементов из списка
% Формат ввода: (элемент, список, список без элемента)
myRemove(E, [E|S], S).
myRemove(E, [E1|S], [E1|X]) :- myRemove(E, S, X).

% Предикат перестановки элементов списка
% Формат ввода: (список, перестановка)
myPermute([], []).
myPermute(S, [L|Y]) :-
    myRemove(L, S, X),
    myPermute(X, Y).

% Предикат подсписка списка
% Формат ввода: (подсписок, список)
mySublist(X, _Y) :-
    myAppend(S, L, _M),
    myAppend(X, S, L).

% Реализация предиката обработки числового списка (списков):
% Получение последнего элемента

% - с использованием встроенных предикатов
% Формат ввода: (список, последний элемент)
getlast(L, X) :- append(_, [X], L).

% - без использования встроенных предикатов
% Формат ввода: (список, последний элемент)
myGetlast([X], X).
myGetlast([_|L], X) :- myGetlast(L, X).

% Реализация предиката обработки числового списка (списков):
% Формат ввода: (список, сумма элементов)
mySum([], 0). %сумма элементов списка
mySum([H|T], Sum) :- mySum(T, Sum1), Sum is Sum1 + H.

% Пример совместного использования предикатов
% Предикат для нахождение длины списка до и после удаления последнего элемента и вывод последнего элемента
% Формат ввода: (список, длина до удаления, последний эл-т, длина после удаления)
coop(L, X1, P, X2):-
    myLength(L, X1),
    myGetlast(L, P),
    myRemove(P, L, L1),
    myLength(L1, X2).
